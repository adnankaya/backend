// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

namespace backend.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20210106110106_CreateMachinePiece")]
    partial class CreateMachinePiece
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("backend.Entities.Expert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("firstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("tExpert");
                });

            modelBuilder.Entity("backend.Entities.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("expertId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("expertId");

                    b.ToTable("tMachine");
                });

            modelBuilder.Entity("backend.Entities.MachinePiece", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("machineId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pieceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("machineId");

                    b.HasIndex("pieceId");

                    b.ToTable("tMachinePiece");
                });

            modelBuilder.Entity("backend.Entities.Piece", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("tPiece");
                });

            modelBuilder.Entity("backend.Entities.Machine", b =>
                {
                    b.HasOne("backend.Entities.Expert", "Expert")
                        .WithMany("machines")
                        .HasForeignKey("expertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expert");
                });

            modelBuilder.Entity("backend.Entities.MachinePiece", b =>
                {
                    b.HasOne("backend.Entities.Machine", "machine")
                        .WithMany("machinePieces")
                        .HasForeignKey("machineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Entities.Piece", "piece")
                        .WithMany("machinePieces")
                        .HasForeignKey("pieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("machine");

                    b.Navigation("piece");
                });

            modelBuilder.Entity("backend.Entities.Expert", b =>
                {
                    b.Navigation("machines");
                });

            modelBuilder.Entity("backend.Entities.Machine", b =>
                {
                    b.Navigation("machinePieces");
                });

            modelBuilder.Entity("backend.Entities.Piece", b =>
                {
                    b.Navigation("machinePieces");
                });
#pragma warning restore 612, 618
        }
    }
}
